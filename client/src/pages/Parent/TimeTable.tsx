import {
    Box,
    Typography,
} from '@mui/material';
import { useState } from 'react';
import Schedules from './Schedules';
import Information from './Information';


type ScheduleItem = {
    time: string;
    subject: string;
    feedback?: string;
};

type Student = {
    id: number;
    name: string;
    class: string;
    teacher: string;
    year: string;
    schedule: {
        morning: ScheduleItem[];
        afternoon: ScheduleItem[];
    };
    meals: { time: string; content: string }[];
};

const mockStudents: Student[] = [
    {
        id: 1,
        name: 'B√© An',
        class: 'M·∫ßm 2',
        teacher: 'C√¥ Linh',
        year: '2024 - 2025',
        schedule: {
            morning: [
                { time: '7:30 - 7:45', subject: 'ƒê√≥n tr·∫ª & Th·ªÉ d·ª•c s√°ng', feedback: 'B√© h·ª£p t√°c t·ªët' },
                { time: '7:45 - 8:15', subject: 'ƒÇn s√°ng', feedback: 'ƒÇn h·∫øt su·∫•t, vui v·∫ª' },
                { time: '8:15 - 8:45', subject: 'Ho·∫°t ƒë·ªông ngo√†i tr·ªùi', feedback: 'Tham gia nƒÉng ƒë·ªông' },
                { time: '8:45 - 9:15', subject: 'Ho·∫°t ƒë·ªông t·∫≠p th·ªÉ', feedback: 'T√≠ch c·ª±c ph√°t bi·ªÉu' },
                { time: '9:15 - 9:45', subject: 'Ti·∫øng Vi·ªát - C5 B√†i 8', feedback: 'ƒê·ªçc r√µ r√†ng, vi·∫øt ƒë·∫πp' },
                { time: '9:45 - 10:15', subject: 'Phonics', feedback: 'Ph√°t √¢m ƒë√∫ng, nh·ªõ b√†i' },
            ],
            afternoon: [
                { time: '10:15 - 10:45', subject: 'ƒÇn nh·∫π' },
                { time: '10:45 - 11:15', subject: 'Ho·∫°t ƒë·ªông t·ª± ch·ªçn' },
                { time: '11:15 - 11:45', subject: 'Ho·∫°t ƒë·ªông ngo√†i tr·ªùi' },
                { time: '11:45 - 12:15', subject: 'ƒÇn tr∆∞a' },
                { time: '12:15 - 14:00', subject: 'Ng·ªß tr∆∞a' },
                { time: '14:00 - 14:30', subject: 'Th·ª©c d·∫≠y & V·ªá sinh c√° nh√¢n' },
                { time: '14:30 - 15:00', subject: 'ƒÇn x·∫ø' },
                { time: '15:00 - 16:00', subject: 'Ho·∫°t ƒë·ªông t·ª± ch·ªçn' },
            ],
        },
        meals: [
            { time: '7:45 - 8:15', content: 'ƒÇn s√°ng: Ch√°o th·ªãt b·∫±m, s·ªØa t∆∞∆°i' },
            { time: '10:15 - 10:45', content: 'ƒÇn nh·∫π: B√°nh quy, n∆∞·ªõc cam' },
            { time: '11:45 - 12:15', content: 'ƒÇn tr∆∞a: C∆°m, canh rau, th·ªãt kho' },
            { time: '14:30 - 15:00', content: 'ƒÇn x·∫ø: S·ªØa chua, tr√°i c√¢y' },
        ]
    },
];

export default function TimeTable() {
    const [selectedStudentId, setSelectedStudentId] = useState(1);
    const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);
    const [expanded, setExpanded] = useState<{ [key: string]: boolean }>({
        morning: false,
        afternoon: false,
    });

    const student = mockStudents.find((s) => s.id === selectedStudentId);

    const handleAccordionChange =
        (panel: string) => (_event: React.SyntheticEvent, isExpanded: boolean) => {
            setExpanded((prev) => ({
                ...prev,
                [panel]: isExpanded,
            }));
        };

    return (
        <Box sx={{ p: 4, minHeight: '100vh', bgcolor: '#f5f7fb' }}>
            <Typography variant="h4" gutterBottom sx={{ fontWeight: 700, color: '#0d47a1' }}>
                üìò L·ªãch h·ªçc c·ªßa b√©
            </Typography>

            <Information
                students={mockStudents}
                selectedStudentId={selectedStudentId}
                onStudentChange={setSelectedStudentId}
                selectedDate={selectedDate}
                onDateChange={setSelectedDate}
                currentStudent={student}
            />

            <Schedules
                title="üåû Bu·ªïi s√°ng"
                panelKey="morning"
                expanded={expanded['morning']}
                onChange={handleAccordionChange}
                scheduleData={student?.schedule.morning || []}
            />
            <Schedules
                title="üåô Bu·ªïi chi·ªÅu"
                panelKey="afternoon"
                expanded={expanded['afternoon']}
                onChange={handleAccordionChange}
                scheduleData={student?.schedule.afternoon || []}
            />

        </Box>
    );
}
